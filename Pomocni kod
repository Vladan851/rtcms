<!--{{$posts->links()}}--> paginate

***********************************************
UPLOAD IMAGE https://www.dropzonejs.com/
**************************************************


***********************************************
SLUGGABLE
**************************************************

https://github.com/cviebrock/eloquent-sluggable


INSTALL
composer require cviebrock/eloquent-sluggable:^4.6

config/app u Providers
Cviebrock\EloquentSluggable\ServiceProvider::class,

//Optionally, publish the configuration file if you want to change any defaults:
php artisan vendor:publish --provider="Cviebrock\EloquentSluggable\ServiceProvider"

POSTS model eloqvent

use Cviebrock\EloquentSluggable\Sluggable;

use Sluggable;

public function sluggable()
    {
        return [
            
            'slug' => [
                'source' => 'title',
                
            ]
        ];
    }


***********************************************



Slug from string

    function slug($str){
        
        $table = array(
        'Š'=>'S', 'š'=>'s', 'Đ'=>'Dj', 'đ'=>'dj', 'Ž'=>'Z', 'ž'=>'z', 'Č'=>'C', 'č'=>'c', 'Ć'=>'C', 'ć'=>'c',
        'À'=>'A', 'Á'=>'A', 'Â'=>'A', 'Ã'=>'A', 'Ä'=>'A', 'Å'=>'A', 'Æ'=>'A', 'Ç'=>'C', 'È'=>'E', 'É'=>'E',
        'Ê'=>'E', 'Ë'=>'E', 'Ì'=>'I', 'Í'=>'I', 'Î'=>'I', 'Ï'=>'I', 'Ñ'=>'N', 'Ò'=>'O', 'Ó'=>'O', 'Ô'=>'O',
        'Õ'=>'O', 'Ö'=>'O', 'Ø'=>'O', 'Ù'=>'U', 'Ú'=>'U', 'Û'=>'U', 'Ü'=>'U', 'Ý'=>'Y', 'Þ'=>'B', 'ß'=>'Ss',
        'à'=>'a', 'á'=>'a', 'â'=>'a', 'ã'=>'a', 'ä'=>'a', 'å'=>'a', 'æ'=>'a', 'ç'=>'c', 'è'=>'e', 'é'=>'e',
        'ê'=>'e', 'ë'=>'e', 'ì'=>'i', 'í'=>'i', 'î'=>'i', 'ï'=>'i', 'ð'=>'o', 'ñ'=>'n', 'ò'=>'o', 'ó'=>'o',
        'ô'=>'o', 'õ'=>'o', 'ö'=>'o', 'ø'=>'o', 'ù'=>'u', 'ú'=>'u', 'û'=>'u', 'ý'=>'y', 'ý'=>'y', 'þ'=>'b',
        'ÿ'=>'y', 'Ŕ'=>'R', 'ŕ'=>'r',
        );

        $str = strtr($str, $table);
        
	$str = strtolower(trim($str));
	$str = preg_replace('/[^a-z0-9-]/', '-', $str);
	$str = preg_replace('/-+/', "-", $str);
	return $str;
    }





php artisan //lista komandi

Git Bash program komande nad projektom Laravel
/*********************************************************************
//Create new Laravel project
composer create-project laravel/laravel projectname
//Verzija laravela
php artisan --version
/*********************************************************************

php artisan migrate
/*********************************************************************
ERROR: SQLSTATE[42000]: Syntax error or access violation: 1071 Specified key was too long;

/App/Providers/AppServiceProvider
use Illuminate\Support\Facades\Schema;
Schema::defaultStringLength(191);

Zatim obrisati tabele koje su se pojavile i zatim ponoviti komandu
/*********************************************************************

/*********************************************************************
ERROR MASS ASsIGMENT
//Unesemo kod ispod sa onim atributima kojima treba biti dozvoljen mass assigment
u onom modelu u kome se pojavi prblem

 protected $fillable = ['name'];
/*********************************************************************

//Kreiranje kontrolera
php artisan make:controller PostsController

//Kreiranje kontrolera sa resursima tj sa svim funkcijama
php artisan make:controller --resource PostsController

//za greske
composer dump-autoload
php artisan cache:clear

//Migracija tabela u mnozini
php artisan make:migration create_roles_table --create=roles

//Migriranje
php artisan migrate
php artisan migrate:rollback
php artisan migrate:refresh

//Pravljenje modela sa Migracijom
php artisan make:model Tag -m

/*######################################################*/

php artisan migarate 
php artisan migarate:fresh
php artisan migarate:reset
php artisan migrate:rollback 
php artisan migrate:refresh

/*######################################################*/

If you receive a "class not found" error when running migrations, try running the: 

composer dump-autoload //da bi composer procitao novokreirane klase

/*######################################################*/

PROBLEM: "Laravel Migration Error: Syntax error or access violation: 1071 Specified key was too long; max key length is 767 bytes"

Add the following code in AppServiceProvider.php

L5_root/app/Providers/AppServiceProvider.php


use Illuminate\Support\Facades\Schema; //Import Schema

function boot()
{
    Schema::defaultStringLength(191); //Solved by increasing StringLength

}

/*######################################################*/

Create migration

php artisan make:migration create_posts_table --create=posts

php artisan make:migration add_xxxx_column_to_posts_table --create=posts //dodaje kolonu u postojecu tabelu


/*######################################################*/
HTML to PDF

https://github.com/spiritix/html-to-pdf

//Tutorial
https://mpdf.github.io/ 
/*######################################################*/

/*######################################################*/
Instalirati node.js skunut sa interneta za Windows, provjeriti globalnu dostupnost i zatim konfigurisati proxy ako smo na Domenu
npm install in folder of laravel project
npm config set proxy http://192.168.110.50:4480
npm config set https-proxy http://192.168.110.50:4480
/*######################################################*/


/*######################################################*/
SB Admin v2.0
/*######################################################*/

https://hdtuto.com/article/php-laravel-55-bootstrap-admin-theme-integration-example-from-scratch

/*######################################################*/

/*######################################################*/
Composer html and forms
/*######################################################*/

composer require laravelcollective/html

Change "config/app.php" file:

  'providers' => [
    // ...
    Collective\Html\HtmlServiceProvider::class,
    // ...
  ],

   'aliases' => [
    // ...
      'Form' => Collective\Html\FormFacade::class,
      'Html' => Collective\Html\HtmlFacade::class,
    // ...
  ],
/*######################################################*/


/*######################################################*/
  Model lists function changed to plack function
/*######################################################*/

$roles = Role::pluck('name', 'id')->all();


/*######################################################*/
  Laravel-Filemanager
/*######################################################*/

1. http://image.intervention.io/getting_started/installation

composer require intervention/image

2. https://unisharp.github.io/laravel-filemanager/installation

- composer require unisharp/laravel-filemanager:~1.8

- config/app.php

Add service providers

 UniSharp\LaravelFilemanager\LaravelFilemanagerServiceProvider::class,
 Intervention\Image\ImageServiceProvider::class,

And add class aliases

 'Image' => Intervention\Image\Facades\Image::class,


3. Publish the package’s config and assets :

 php artisan vendor:publish --tag=lfm_config
 php artisan vendor:publish --tag=lfm_public

4. php artisan storage:link

5. https://unisharp.github.io/laravel-filemanager/integration

Option 2: TinyMCE4

6.Set up config/lfm.php

'base_directory' => 'public',

    'images_folder_name' => 'storage/uploads/photos',
    'files_folder_name'  => 'storage/uploads/files',

    'shared_folder_name' => '',
    'thumb_folder_name'  => 'thumbs',


..............................


/*######################################################*/
DataTables
/*######################################################*/


https://datatables.net/

INSTALL
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.css">
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.js"></script>

JS 
$(document).ready(function() {
    $('#example').DataTable();
} );

HTML
<table id="example" class="display" style="width:100%">


/*######################################################*/
Middleware
/*######################################################*/

php artisan make:middleware Admin

Kernel.php
Registrovati middleware

'admin' => \App\Http\Middleware\Admin::class,

/*######################################################*/
npm clean cache --force
/*######################################################*/






